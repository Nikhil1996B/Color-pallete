{"version":3,"sources":["App.js","index.js"],"names":["App","useState","count","setCount","color","setColor","select","setSelect","newColor","className","id","map","value","index","style","backgroundColor","Object","keys","key","onClick","aria-label","onSubmit","e","preventDefault","i","randomColor","Math","floor","random","toString","push","htmlFor","type","min","max","onChange","target","marginRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAgHeA,MA3Gf,WAAe,MAEaC,mBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,MAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIeJ,mBAAS,WAJxB,mBAINK,EAJM,KAIEC,EAJF,KAKTC,EAAW,GAmBf,OACE,oCACE,yBAAKC,UAAW,aACd,6BAASC,GAAI,gBAAiBD,UAAW,gBACvC,4BACE,wCAEF,6BACA,6BACA,yBAAKA,UAAW,kBACbL,EACCA,EAAMI,SAASG,KAAI,SAACC,EAAOC,GAAR,OACjB,yBACEJ,UAAS,iBACTK,MAAO,CAAEC,gBAAgB,GAAD,OAAKC,OAAOC,KAAKL,KACzCM,IAAKL,EACLM,QAAS,kBAAMZ,EAAUS,OAAOC,KAAKL,UAIzC,6BACE,gDACA,+EAKR,2BACEQ,aAAY,+BACZX,UAAW,iBAEX,0BAAMY,SAnCO,SAACC,GACpBA,EAAEC,iBAVgB,WAClB,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAOsB,IAAK,CAC9B,IAAIC,EALCC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAMnDrB,EAASsB,KAAT,0BACOL,GADP,WAC2BA,KAE3BpB,EAAS,CAAEG,cAKbiB,KAkCQ,2BAAOM,QAAQ,IACb,4BACE,4CAEF,6BACA,2BACEC,KAAM,SACNC,IAAK,IACLC,IAAK,MACLzB,UAAW,eACX0B,SAAU,SAACb,GAAD,OAAOnB,EAASmB,EAAEc,OAAOxB,WAGvC,6BACA,4BACEoB,KAAM,SACNvB,UAAW,kBACXK,MAAO,CAAEuB,YAAa,SAHxB,YAOA,4BACElB,QAAS,WACPhB,EAAS,GACTE,EAAS,OAEXI,UAAW,kBALb,UAUF,6BACA,6BACE,yCACA,6BACA,yBACEA,UAAU,eACVK,MAAO,CAAEC,gBAAgB,GAAD,OAAKT,OAGjC,6BACE,2BACE,mCADF,IAC0B,YAAXA,EAAuBA,EAAS,yBClG3DgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a7f78f69.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./App.css\";\n\nconst Canvas = () => {};\n\nfunction App() {\n  //Initial state, when no color is generated\n  const [count, setCount] = useState(0);\n  const [color, setColor] = useState(null);\n  const [select, setSelect] = useState(\"#ffffff\");\n  let newColor = [];\n  //Random color genrator\n  const randomColorGenerator = () => {\n    return Math.floor(Math.random() * 16777215).toString(16);\n  };\n  // Random colors\n  const randomColor = () => {\n    for (let i = 0; i < count; i++) {\n      let randomColor = randomColorGenerator();\n      newColor.push({\n        [`#${randomColor}`]: `#${randomColor}`,\n      });\n      setColor({ newColor });\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    randomColor();\n  };\n  return (\n    <>\n      <div className={\"container\"}>\n        <section id={\"color-palette\"} className={\"left-section\"}>\n          <h3>\n            <b>Pallette</b>\n          </h3>\n          <br />\n          <hr />\n          <div className={\"row marginleft\"}>\n            {color ? (\n              color.newColor.map((value, index) => (\n                <div\n                  className={`col canvas-box`}\n                  style={{ backgroundColor: `${Object.keys(value)}` }}\n                  key={index}\n                  onClick={() => setSelect(Object.keys(value))}\n                ></div>\n              ))\n            ) : (\n              <div>\n                <h3>Nothing Selected</h3>\n                <p>Please add the number to generate the pallete</p>\n              </div>\n            )}\n          </div>\n        </section>\n        <aside\n          aria-label={\"color palette form generator\"}\n          className={\"right-section\"}\n        >\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"\">\n              <h3>\n                <b>Config Panel</b>\n              </h3>\n              <hr />\n              <input\n                type={\"number\"}\n                min={\"1\"}\n                max={\"200\"}\n                className={\"form-control\"}\n                onChange={(e) => setCount(e.target.value)}\n              />\n            </label>\n            <br />\n            <button\n              type={\"submit\"}\n              className={\"btn btn-primary\"}\n              style={{ marginRight: \"10px\" }}\n            >\n              Generate\n            </button>\n            <button\n              onClick={() => {\n                setCount(0);\n                setColor(null);\n              }}\n              className={\"btn btn-danger\"}\n            >\n              Clear\n            </button>\n          </form>\n          <br />\n          <div>\n            <h3>Selected:</h3>\n            <hr />\n            <div\n              className=\"selected-box\"\n              style={{ backgroundColor: `${select}` }}\n            ></div>\n          </div>\n          <div>\n            <p>\n              <b>Hex:</b> {select !== \"#ffffff\" ? select : \"Nothing Selected\"}\n            </p>\n          </div>\n        </aside>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}